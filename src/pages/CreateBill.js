
// src/pages/CreateBill.js - Updated v2: single combobox (type-less), inline add-item, delivery/create dates
import React, { useState, useEffect, useMemo, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import { Plus, Trash2, ShoppingCart, User, CreditCard, FileText, Save, ArrowLeft, Calculator, Building2, Search, Box } from 'lucide-react';
import { billAPI, customerAPI, employeeAPI, stockAPI, productAPI } from '../services/api';
import toastService from '../services/ToastService';

/**
 * Combined combobox: single input + dropdown suggestions (no Enter required).
 * - Merges stocks + products; displays as list while typing
 * - Clicking an option triggers onSelect(option)
 */
const ComboBox = ({
  placeholder = '‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...',
  options = [],
  onSelect,
  inputStyle = {},
  optionItemStyle = {},
}) => {
  const [query, setQuery] = useState('');
  const [open, setOpen] = useState(false);
  const containerRef = useRef(null);

  const norm = (s) => (s || '').toString().toLowerCase();
  const filtered = useMemo(() => {
    const q = norm(query);
    if (!q) return options.slice(0, 50);
    return options.filter(o => norm(o.label).includes(q)).slice(0, 50);
  }, [options, query]);

  useEffect(() => {
    const onClickOutside = (e) => {
      if (containerRef.current && !containerRef.current.contains(e.target)) {
        setOpen(false);
      }
    };
    document.addEventListener('mousedown', onClickOutside);
    return () => document.removeEventListener('mousedown', onClickOutside);
  }, []);

  return (
    <div ref={containerRef} style={{ position: 'relative' }}>
      <div style={{ position: 'relative' }}>
        <input
          type="text"
          value={query}
          onChange={(e) => {
            setQuery(e.target.value);
            setOpen(true);
          }}
          onFocus={() => setOpen(true)}
          placeholder={placeholder}
          style={{
            width: '100%',
            padding: '12px 36px 12px 12px',
            border: '2px solid #e5e7eb',
            borderRadius: '8px',
            fontSize: '14px',
            outline: 'none',
            ...inputStyle
          }}
        />
        <Search size={16} style={{ position: 'absolute', right: 10, top: 12, opacity: 0.6 }} />
      </div>

      {open && (
        <div style={{
          position: 'absolute',
          top: '100%',
          left: 0,
          right: 0,
          background: 'white',
          border: '1px solid #e5e7eb',
          borderRadius: '8px',
          marginTop: 6,
          boxShadow: '0 8px 24px rgba(0,0,0,0.08)',
          maxHeight: 280,
          overflowY: 'auto',
          zIndex: 20
        }}>
          {filtered.length === 0 ? (
            <div style={{ padding: 12, color: '#6b7280', fontSize: 14 }}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö ‚Äú{query}‚Äù</div>
          ) : filtered.map(opt => (
            <button
              key={`${opt.type}-${opt.id}`}
              type="button"
              onClick={() => {
                onSelect?.(opt);
                setQuery(opt.label);
                setOpen(false);
              }}
              style={{
                width: '100%',
                textAlign: 'left',
                padding: '10px 12px',
                background: 'white',
                border: 'none',
                borderBottom: '1px solid #f3f4f6',
                cursor: 'pointer',
                display: 'grid',
                gridTemplateColumns: 'auto 1fr auto',
                gap: 8,
                alignItems: 'center',
                ...optionItemStyle
              }}
            >
              <span style={{ fontSize: 18 }}>{opt.type === 'stock' ? 'üì¶' : 'üîß'}</span>
              <div>
                <div style={{ fontSize: 14, fontWeight: 600, color: '#111827' }}>{opt.name}</div>
                <div style={{ fontSize: 12, color: '#6b7280' }}>
                  {opt.type === 'stock' ? '‡∏ß‡∏±‡∏™‡∏î‡∏∏/‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå' : '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'}
                  {opt.unit ? ` ‚Ä¢ ${opt.unit}` : ''}
                  {typeof opt.remaining !== 'undefined' ? ` ‚Ä¢ ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${opt.remaining}${opt.unit ? ' ' + opt.unit : ''}` : ''}
                </div>
              </div>
              <div style={{ fontSize: 13, color: '#374151', fontWeight: 600 }}>
                ‡∏ø{Number(opt.pricePreview || 0).toLocaleString('th-TH')}
              </div>
            </button>
          ))}
        </div>
      )}
    </div>
  );
};

const CreateBill = () => {
  const navigate = useNavigate();

  // Master data
  const [customers, setCustomers] = useState([]);
  const [employees, setEmployees] = useState([]);
  const [stocks, setStocks] = useState([]);
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);

  // Form state
  const [formData, setFormData] = useState({
    billType: '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
    customerId: '',
    employeeId: '',
    paymentMethod: 'CASH',
    paymentStatus: '‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞',
    dueDate: '',
    vatRate: 0,
    remark: '',
    paymentTerms: '',
    // bank transfer fields
    bankName: '',
    bankAccount: '',
    accountName: '',
    // dates
    deliveryDate: '',
    createDate: new Date().toISOString().split('T')[0],
    billItems: []
  });

  // UI states
  const [showNewCustomerForm, setShowNewCustomerForm] = useState(false);
  const [selectedCustomer, setSelectedCustomer] = useState(null);

  // Inline "current item" without type selector
  const [currentItem, setCurrentItem] = useState({
    type: null, // will be 'stock' or 'product' after select
    itemId: '',
    productId: '',
    quantity: 1,
    pricePerUnit: 0,
    itemName: '',
    unit: ''
  });

  useEffect(() => {
    fetchInitialData();
  }, []);

  const fetchInitialData = async () => {
    try {
      setLoading(true);
      const [customersRes, employeesRes, stocksRes, productsRes] = await Promise.all([
        customerAPI.getAll(),
        employeeAPI.getAll(),
        stockAPI.getAll(),
        productAPI.getAll()
      ]);

      setCustomers(customersRes.data || []);
      setEmployees(employeesRes.data || []);
      setStocks((stocksRes.data || []).filter(s => (s.isActive ?? true)));
      setProducts((productsRes.data || []).filter(p => (p.isActive ?? true)));
    } catch (error) {
      console.error('Error fetching data:', error);
      toastService.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    } finally {
      setLoading(false);
    }
  };

  // Build unified options for combobox
  const unifiedOptions = useMemo(() => {
    const stockOpts = (stocks || []).map(s => ({
      type: 'stock',
      id: s.itemId,
      name: s.itemName,
      unit: s.unit,
      remaining: s.amount,
      pricePreview: s.exportPrice,
      data: s,
      label: `${s.itemName} ${s.amount != null ? `(‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${s.amount}${s.unit ? ' ' + s.unit : ''})` : ''}`.trim()
    }));
    const productOpts = (products || []).map(p => ({
      type: 'product',
      id: p.productId,
      name: p.productName,
      unit: p.unit,
      remaining: p.amount,
      // preview use normalPrice; final price chooses by billType
      pricePreview: p.normalPrice ?? p.partnerPrice,
      data: p,
      label: `${p.productName} ${p.amount != null ? `(‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${p.amount}${p.unit ? ' ' + p.unit : ''})` : ''}`.trim()
    }));
    return [...stockOpts, ...productOpts];
  }, [stocks, products]);

  // Totals
  const calculateTotals = () => {
    const subTotal = formData.billItems.reduce((sum, item) => sum + item.totalPrice, 0);
    const vatAmount = subTotal * (formData.vatRate / 100);
    const grandTotal = subTotal + vatAmount;
    return { subTotal, vatAmount, grandTotal };
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));

    if (name === 'customerId') {
      const customer = customers.find(c => c.customerId === parseInt(value));
      setSelectedCustomer(customer || null);
    }
  };

  const handlePaymentMethodChange = (e) => {
    const method = e.target.value;
    setFormData(prev => ({
      ...prev,
      paymentMethod: method,
      ...(method !== 'TRANSFER' && { bankName: '', bankAccount: '', accountName: '' })
    }));
  };

  // When a combobox option is selected, fill current item
  const handleSelectOption = (opt) => {
    if (!opt) return;
    if (opt.type === 'stock') {
      const s = opt.data;
      setCurrentItem({
        type: 'stock',
        itemId: s.itemId,
        productId: '',
        quantity: 1,
        pricePerUnit: Number(s.exportPrice || 0),
        itemName: s.itemName,
        unit: s.unit || ''
      });
    } else {
      const p = opt.data;
      const price = formData.billType === '‡∏ä‡πà‡∏≤‡∏á' ? (p.partnerPrice ?? p.normalPrice ?? 0) : (p.normalPrice ?? p.partnerPrice ?? 0);
      setCurrentItem({
        type: 'product',
        itemId: '',
        productId: p.productId,
        quantity: 1,
        pricePerUnit: Number(price || 0),
        itemName: p.productName,
        unit: p.unit || ''
      });
    }
  };

  const handleQtyPriceChange = (e) => {
    const { name, value } = e.target;
    setCurrentItem(prev => ({
      ...prev,
      [name]: name === 'quantity' ? Math.max(1, parseInt(value || '1', 10)) : Number(value || 0)
    }));
  };

  const addItemInline = () => {
    if (!currentItem.type) {
      toastService.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤');
      return;
    }
    if (currentItem.quantity <= 0) {
      toastService.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      return;
    }
    const totalPrice = currentItem.quantity * currentItem.pricePerUnit;
    const newItem = {
      id: Date.now(),
      itemId: currentItem.type === 'stock' ? parseInt(currentItem.itemId) : null,
      productId: currentItem.type === 'product' ? parseInt(currentItem.productId) : null,
      name: currentItem.itemName,
      quantity: currentItem.quantity,
      pricePerUnit: currentItem.pricePerUnit,
      totalPrice,
      type: currentItem.type,
      unit: currentItem.unit || ''
    };
    setFormData(prev => ({ ...prev, billItems: [...prev.billItems, newItem] }));
    setCurrentItem({
      type: null,
      itemId: '',
      productId: '',
      quantity: 1,
      pricePerUnit: 0,
      itemName: '',
      unit: ''
    });
    toastService.success('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
  };

  const removeItemFromBill = (rowId) => {
    setFormData(prev => ({
      ...prev,
      billItems: prev.billItems.filter(item => item.id !== rowId)
    }));
    toastService.success('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
  };

  // New customer submit
  const [newCustomer, setNewCustomer] = useState({
    name: '',
    phoneNumber: '',
    address: '',
    customerType: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'
  });
  const handleNewCustomerSubmit = async () => {
    if (!newCustomer.name.trim()) {
      toastService.error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤');
      return;
    }
    try {
      const response = await customerAPI.create(newCustomer);
      const createdCustomer = response.data;
      setCustomers(prev => [...prev, createdCustomer]);
      setFormData(prev => ({ ...prev, customerId: createdCustomer.customerId }));
      setSelectedCustomer(createdCustomer);
      setShowNewCustomerForm(false);
      setNewCustomer({ name: '', phoneNumber: '', address: '', customerType: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' });
      toastService.success('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
    } catch (error) {
      console.error('Error creating customer:', error);
      toastService.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤');
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!formData.customerId || !formData.employeeId) {
      toastService.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô');
      return;
    }
    if (formData.billItems.length === 0) {
      toastService.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
      return;
    }
    if (formData.paymentMethod === 'TRANSFER') {
      if (!formData.bankName || !formData.bankAccount || !formData.accountName) {
        toastService.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        return;
      }
    }

    try {
      setSaving(true);
      // Append dates to remark to avoid schema change if deliveryDate not in DB
      const remarkWithDates = [
        formData.remark,
        formData.deliveryDate ? `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î‡∏™‡πà‡∏á: ${formData.deliveryDate}` : null,
        formData.createDate ? `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: ${formData.createDate}` : null
      ].filter(Boolean).join(' | ');

      const billData = {
        billType: formData.billType,
        customerId: parseInt(formData.customerId),
        employeeId: parseInt(formData.employeeId),
        paymentMethod: formData.paymentMethod,
        paymentStatus: formData.paymentStatus,
        dueDate: formData.dueDate || null,
        vatRate: parseFloat(formData.vatRate),
        remark: remarkWithDates,
        paymentTerms: formData.paymentTerms,
        ...(formData.paymentMethod === 'TRANSFER' && {
          paymentTerms: `${formData.paymentTerms ? formData.paymentTerms + ' | ' : ''}‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£: ${formData.bankName} | ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${formData.bankAccount} | ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ${formData.accountName}`
        }),
        billItems: formData.billItems.map(item => ({
          itemId: item.itemId,
          productId: item.productId,
          quantity: item.quantity,
          pricePerUnit: item.pricePerUnit
        }))
      };

      const response = await billAPI.create(billData);
      if (response.data) {
        toastService.success('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
        navigate('/bills');
      }
    } catch (error) {
      console.error('Error creating bill:', error);
      toastService.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•');
    } finally {
      setSaving(false);
    }
  };

  const { subTotal, vatAmount, grandTotal } = calculateTotals();

  if (loading) {
    return (
      <div style={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        height: '400px',
        flexDirection: 'column',
        gap: '16px'
      }}>
        <div style={{
          width: '40px',
          height: '40px',
          border: '4px solid #f3f4f6',
          borderTop: '4px solid #3b82f6',
          borderRadius: '50%',
          animation: 'spin 1s linear infinite'
        }} />
        <div style={{ color: '#6b7280', fontWeight: '500' }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>
      </div>
    );
  }

  return (
    <div style={{ padding: '24px', maxWidth: '1200px', margin: '0 auto' }}>
      {/* Header */}
      <div style={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center', 
        marginBottom: '32px',
        padding: '20px',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        borderRadius: '16px',
        color: 'white'
      }}>
        <div>
          <h1 style={{ margin: '0 0 8px', fontSize: '28px', fontWeight: '700' }}>
            üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÉ‡∏´‡∏°‡πà
          </h1>
          <p style={{ margin: 0, fontSize: '16px', opacity: 0.9 }}>
            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
          </p>
        </div>
        <button
          onClick={() => navigate('/bills')}
          style={{
            display: 'flex',
            alignItems: 'center',
            gap: '8px',
            padding: '12px 20px',
            background: 'rgba(255,255,255,0.2)',
            border: 'none',
            borderRadius: '12px',
            color: 'white',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: '500',
            transition: 'all 0.2s ease'
          }}
        >
          <ArrowLeft size={16} />
          ‡∏Å‡∏•‡∏±‡∏ö
        </button>
      </div>

      <form onSubmit={handleSubmit}>
        <div style={{ display: 'grid', gap: '24px' }}>
          
          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô + ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <h3 style={{ 
              margin: '0 0 20px', 
              fontSize: '18px', 
              fontWeight: '600',
              color: '#374151',
              display: 'flex',
              alignItems: 'center',
              gap: '8px'
            }}>
              <User size={20} />
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
            </h3>

            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '16px' }}>
              
              {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏¥‡∏• */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏¥‡∏• *
                </label>
                <select
                  name="billType"
                  value={formData.billType}
                  onChange={handleInputChange}
                  required
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                >
                  <option value="‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ">‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
                  <option value="‡∏ä‡πà‡∏≤‡∏á">‡∏ä‡πà‡∏≤‡∏á</option>
                </select>
              </div>

              {/* ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô *
                </label>
                <select
                  name="employeeId"
                  value={formData.employeeId}
                  onChange={handleInputChange}
                  required
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                >
                  <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</option>
                  {employees.map(employee => (
                    <option key={employee.employeeId} value={employee.employeeId}>
                      {employee.firstName} {employee.lastName}
                    </option>
                  ))}
                </select>
              </div>

              {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î‡∏™‡πà‡∏á */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î‡∏™‡πà‡∏á
                </label>
                <input
                  type="date"
                  name="deliveryDate"
                  value={formData.deliveryDate}
                  onChange={handleInputChange}
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                />
              </div>

              {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏¢ ‡πÜ) */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                </label>
                <input
                  type="date"
                  name="createDate"
                  value={formData.createDate}
                  readOnly
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    background: '#f9fafb',
                    color: '#6b7280',
                    transition: 'border-color 0.2s ease'
                  }}
                />
                <small style={{ color: '#6b7280' }}>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢</small>
              </div>

            </div>
          </div>

          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <div style={{ 
              display: 'flex', 
              justifyContent: 'space-between', 
              alignItems: 'center', 
              marginBottom: '20px' 
            }}>
              <h3 style={{ 
                margin: 0, 
                fontSize: '18px', 
                fontWeight: '600',
                color: '#374151',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}>
                <User size={20} />
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
              </h3>
              <button
                type="button"
                onClick={() => setShowNewCustomerForm(!showNewCustomerForm)}
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                  padding: '10px 16px',
                  background: 'linear-gradient(135deg, #10b981, #059669)',
                  border: 'none',
                  borderRadius: '8px',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '14px',
                  fontWeight: '500',
                  transition: 'all 0.2s ease'
                }}
              >
                <Plus size={16} />
                ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
              </button>
            </div>

            {!showNewCustomerForm ? (
              <>
                {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà */}
                <div style={{ marginBottom: '20px' }}>
                  <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                    ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ *
                  </label>
                  <select
                    name="customerId"
                    value={formData.customerId}
                    onChange={handleInputChange}
                    required
                    style={{
                      width: '100%',
                      padding: '12px',
                      border: '2px solid #e5e7eb',
                      borderRadius: '8px',
                      fontSize: '14px',
                      transition: 'border-color 0.2s ease'
                    }}
                  >
                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</option>
                    {customers.map(customer => (
                      <option key={customer.customerId} value={customer.customerId}>
                        {customer.name} - {customer.customerType || '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'}
                      </option>
                    ))}
                  </select>
                </div>

                {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
                {selectedCustomer && (
                  <div style={{ 
                    padding: '16px', 
                    backgroundColor: '#f0f9ff', 
                    borderRadius: '12px',
                    border: '2px solid #0ea5e9'
                  }}>
                    <h4 style={{ margin: '0 0 12px 0', color: '#0369a1', fontSize: '16px', fontWeight: '600' }}>
                      ‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                    </h4>
                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '12px' }}>
                      <div><strong>üìù ‡∏ä‡∏∑‡πà‡∏≠:</strong> {selectedCustomer.name}</div>
                      <div><strong>üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {selectedCustomer.phoneNumber || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</div>
                      <div><strong>üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {selectedCustomer.address || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</div>
                      <div><strong>üë§ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> {selectedCustomer.customerType || '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'}</div>
                    </div>
                  </div>
                )}
              </>
            ) : (
              /* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà */
              <div style={{ 
                padding: '24px', 
                backgroundColor: '#f0fdf4', 
                borderRadius: '12px',
                border: '2px solid #10b981'
              }}>
                <h4 style={{ margin: '0 0 20px 0', color: '#065f46', fontSize: '18px', fontWeight: '600' }}>
                  ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                </h4>
                
                <div style={{ 
                  display: 'grid', 
                  gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', 
                  gap: '16px',
                  marginBottom: '20px'
                }}>
                  <div>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '6px', 
                      fontWeight: '500', 
                      color: '#374151'
                    }}>
                      üìù ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ *
                    </label>
                    <input
                      type="text"
                      value={newCustomer.name}
                      onChange={(e) => setNewCustomer(prev => ({ ...prev, name: e.target.value }))}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: '2px solid #10b981',
                        borderRadius: '8px',
                        fontSize: '14px',
                        background: 'white'
                      }}
                      placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"
                      required
                    />
                  </div>
                  
                  <div>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '6px', 
                      fontWeight: '500', 
                      color: '#374151'
                    }}>
                      üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
                    </label>
                    <input
                      type="tel"
                      value={newCustomer.phoneNumber}
                      onChange={(e) => setNewCustomer(prev => ({ ...prev, phoneNumber: e.target.value }))}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: '2px solid #10b981',
                        borderRadius: '8px',
                        fontSize: '14px',
                        background: 'white'
                      }}
                      placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£"
                    />
                  </div>
                  
                  <div>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '6px', 
                      fontWeight: '500', 
                      color: '#374151'
                    }}>
                      üë§ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                    </label>
                    <select
                      value={newCustomer.customerType}
                      onChange={(e) => setNewCustomer(prev => ({ ...prev, customerType: e.target.value }))}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: '2px solid #10b981',
                        borderRadius: '8px',
                        fontSize: '14px',
                        background: 'white'
                      }}
                    >
                      <option value="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
                      <option value="‡∏ä‡πà‡∏≤‡∏á">‡∏ä‡πà‡∏≤‡∏á</option>
                    </select>
                  </div>
                </div>
                
                <div style={{ marginBottom: '20px' }}>
                  <label style={{ 
                    display: 'block', 
                    marginBottom: '6px', 
                    fontWeight: '500', 
                    color: '#374151'
                  }}>
                    üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
                  </label>
                  <textarea
                    value={newCustomer.address}
                    onChange={(e) => setNewCustomer(prev => ({ ...prev, address: e.target.value }))}
                    style={{
                      width: '100%',
                      padding: '12px',
                      border: '2px solid #10b981',
                      borderRadius: '8px',
                      fontSize: '14px',
                      minHeight: '80px',
                      resize: 'vertical',
                      background: 'white'
                    }}
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"
                  />
                </div>
                
                <div style={{ display: 'flex', gap: '12px' }}>
                  <button 
                    type="button" 
                    onClick={handleNewCustomerSubmit} 
                    style={{
                      display: 'flex',
                      alignItems: 'center',
                      gap: '8px',
                      padding: '12px 20px',
                      background: '#10b981',
                      border: 'none',
                      borderRadius: '8px',
                      color: 'white',
                      cursor: 'pointer',
                      fontSize: '14px',
                      fontWeight: '500'
                    }}
                  >
                    <Save size={16} />
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                  </button>
                  <button 
                    type="button" 
                    onClick={() => setShowNewCustomerForm(false)} 
                    style={{
                      padding: '12px 20px',
                      background: '#f3f4f6',
                      border: 'none',
                      borderRadius: '8px',
                      color: '#374151',
                      cursor: 'pointer',
                      fontSize: '14px',
                      fontWeight: '500'
                    }}
                  >
                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                  </button>
                </div>
              </div>
            )}
          </div>

          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <h3 style={{ 
              margin: '0 0 20px', 
              fontSize: '18px', 
              fontWeight: '600',
              color: '#374151',
              display: 'flex',
              alignItems: 'center',
              gap: '8px'
            }}>
              <CreditCard size={20} />
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
            </h3>

            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '16px' }}>
              
              {/* ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô *
                </label>
                <select
                  name="paymentMethod"
                  value={formData.paymentMethod}
                  onChange={handlePaymentMethodChange}
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                >
                  <option value="CASH">üíµ ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î</option>
                  <option value="TRANSFER">üí≥ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</option>
                  <option value="CREDIT">üè¶ ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</option>
                  <option value="CHEQUE">üìÑ ‡πÄ‡∏ä‡πá‡∏Ñ</option>
                </select>
              </div>

              {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞ */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞
                </label>
                <select
                  name="paymentStatus"
                  value={formData.paymentStatus}
                  onChange={handleInputChange}
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                >
                  <option value="‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞">‚è≥ ‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞</option>
                  <option value="‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß">‚úÖ ‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß</option>
                  <option value="‡∏ä‡∏≥‡∏£‡∏∞‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô">üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô</option>
                  <option value="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å">‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</option>
                </select>
              </div>

              {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                </label>
                <input
                  type="date"
                  name="dueDate"
                  value={formData.dueDate}
                  onChange={handleInputChange}
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                />
              </div>

              {/* VAT */}
              <div>
                <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                  ‡∏≠‡∏±‡∏ï‡∏£‡∏≤ VAT (%)
                </label>
                <input
                  type="number"
                  name="vatRate"
                  value={formData.vatRate}
                  onChange={handleInputChange}
                  min="0"
                  max="100"
                  step="0.01"
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    transition: 'border-color 0.2s ease'
                  }}
                />
              </div>

            </div>

            {/* ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô */}
            {formData.paymentMethod === 'TRANSFER' && (
              <div style={{
                marginTop: '20px',
                padding: '20px',
                background: 'linear-gradient(135deg, #e0f2fe 0%, #e1f5fe 100%)',
                borderRadius: '12px',
                border: '2px solid #0284c7'
              }}>
                <h4 style={{ 
                  margin: '0 0 16px', 
                  fontSize: '16px', 
                  fontWeight: '600',
                  color: '#0c4a6e',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px'
                }}>
                  <Building2 size={18} />
                  ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                </h4>

                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '16px' }}>
                  
                  {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ */}
                  <div>
                    <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#0c4a6e' }}>
                      ‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ *
                    </label>
                    <input
                      type="text"
                      name="bankName"
                      value={formData.bankName}
                      onChange={handleInputChange}
                      placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢"
                      required={formData.paymentMethod === 'TRANSFER'}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: '2px solid #0284c7',
                        borderRadius: '8px',
                        fontSize: '14px',
                        background: 'white',
                        transition: 'border-color 0.2s ease'
                      }}
                    />
                  </div>

                  {/* ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ */}
                  <div>
                    <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#0c4a6e' }}>
                      ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ *
                    </label>
                    <input
                      type="text"
                      name="bankAccount"
                      value={formData.bankAccount}
                      onChange={handleInputChange}
                      placeholder="xxx-x-xxxxx-x"
                      required={formData.paymentMethod === 'TRANSFER'}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: '2px solid #0284c7',
                        borderRadius: '8px',
                        fontSize: '14px',
                        background: 'white',
                        transition: 'border-color 0.2s ease'
                      }}
                    />
                  </div>

                  {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ */}
                  <div>
                    <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#0c4a6e' }}>
                      ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ *
                    </label>
                    <input
                      type="text"
                      name="accountName"
                      value={formData.accountName}
                      onChange={handleInputChange}
                      placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"
                      required={formData.paymentMethod === 'TRANSFER'}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: '2px solid #0284c7',
                        borderRadius: '8px',
                        fontSize: '14px',
                        background: 'white',
                        transition: 'border-color 0.2s ease'
                      }}
                    />
                  </div>

                </div>

                <div style={{
                  marginTop: '12px',
                  padding: '8px 12px',
                  background: 'rgba(12, 74, 110, 0.1)',
                  borderRadius: '6px',
                  fontSize: '12px',
                  color: '#0c4a6e'
                }}>
                  üí° ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                </div>
              </div>
            )}

            {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞ */}
            <div style={{ marginTop: '16px' }}>
              <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#374151' }}>
                ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞
              </label>
              <textarea
                name="paymentTerms"
                value={formData.paymentTerms}
                onChange={handleInputChange}
                rows="3"
                placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô..."
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '2px solid #e5e7eb',
                  borderRadius: '8px',
                  fontSize: '14px',
                  resize: 'vertical',
                  transition: 'border-color 0.2s ease'
                }}
              />
            </div>

          </div>

          {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ - inline (combobox) */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <div style={{ 
              display: 'flex', 
              justifyContent: 'space-between', 
              alignItems: 'center', 
              marginBottom: '20px' 
            }}>
              <h3 style={{ 
                margin: 0, 
                fontSize: '18px', 
                fontWeight: '600',
                color: '#374151',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}>
                <ShoppingCart size={20} />
                üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏ß‡∏±‡∏™‡∏î‡∏∏
              </h3>
            </div>

            <div style={{
              display: 'grid',
              gridTemplateColumns: '2fr 1fr 1fr 1fr auto',
              gap: '16px',
              alignItems: 'end'
            }}>
              {/* ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (combobox) */}
              <div>
                <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#374151' }}>
                  ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏ß‡∏±‡∏™‡∏î‡∏∏
                </label>
                <ComboBox
                  options={unifiedOptions}
                  onSelect={handleSelectOption}
                />
              </div>

              {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô */}
              <div>
                <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#374151' }}>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</label>
                <input
                  type="number"
                  name="quantity"
                  value={currentItem.quantity}
                  onChange={handleQtyPriceChange}
                  min="1"
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px'
                  }}
                />
              </div>

              {/* ‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢ */}
              <div>
                <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#374151' }}>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢</label>
                <input
                  type="number"
                  step="0.01"
                  name="pricePerUnit"
                  value={currentItem.pricePerUnit}
                  onChange={handleQtyPriceChange}
                  min="0"
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px'
                  }}
                  placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
                />
              </div>

              {/* ‡∏£‡∏ß‡∏° */}
              <div>
                <label style={{ display: 'block', marginBottom: 6, fontWeight: 500, color: '#374151' }}>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°</label>
                <input
                  type="text"
                  value={`‡∏ø${(currentItem.quantity * currentItem.pricePerUnit).toLocaleString('th-TH', { minimumFractionDigits: 2 })}`}
                  readOnly
                  style={{
                    width: '100%',
                    padding: '12px',
                    border: '2px solid #e5e7eb',
                    borderRadius: '8px',
                    fontSize: '14px',
                    background: '#f9fafb',
                    color: '#6b7280'
                  }}
                />
              </div>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° */}
              <div>
                <button
                  type="button"
                  onClick={addItemInline}
                  style={{
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    padding: '10px 20px',
                    border: 'none',
                    borderRadius: '8px',
                    background: '#10b981',
                    color: 'white',
                    cursor: 'pointer',
                    fontSize: '14px',
                    fontWeight: '500'
                  }}
                  disabled={!currentItem.type}
                  title={!currentItem.type ? '‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏Å‡πà‡∏≠‡∏ô' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'}
                >
                  <Plus size={16} />
                  ‡πÄ‡∏û‡∏¥‡πà‡∏°
                </button>
              </div>
            </div>
          </div>

          {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <div style={{ 
              display: 'flex', 
              justifyContent: 'space-between', 
              alignItems: 'center', 
              marginBottom: '20px' 
            }}>
              <h3 style={{ 
                margin: 0, 
                fontSize: '18px', 
                fontWeight: '600',
                color: '#374151',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}>
                <ShoppingCart size={20} />
                ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ({formData.billItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
              </h3>
            </div>

            {formData.billItems.length > 0 ? (
              <div style={{ overflowX: 'auto' }}>
                <table style={{ width: '100%', borderCollapse: 'collapse' }}>
                  <thead>
                    <tr style={{ background: '#f9fafb' }}>
                      <th style={{ padding: '12px', textAlign: 'left', borderBottom: '2px solid #e5e7eb' }}>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                      <th style={{ padding: '12px', textAlign: 'center', borderBottom: '2px solid #e5e7eb' }}>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                      <th style={{ padding: '12px', textAlign: 'right', borderBottom: '2px solid #e5e7eb' }}>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                      <th style={{ padding: '12px', textAlign: 'right', borderBottom: '2px solid #e5e7eb' }}>‡∏£‡∏ß‡∏°</th>
                      <th style={{ padding: '12px', textAlign: 'center', borderBottom: '2px solid #e5e7eb' }}>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                    </tr>
                  </thead>
                  <tbody>
                    {formData.billItems.map((item) => (
                      <tr key={item.id} style={{ borderBottom: '1px solid #e5e7eb' }}>
                        <td style={{ padding: '12px' }}>
                          <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                            <span style={{
                              padding: '4px 8px',
                              borderRadius: '6px',
                              fontSize: '12px',
                              fontWeight: '500',
                              background: item.type === 'stock' ? '#dbeafe' : '#fef3c7',
                              color: item.type === 'stock' ? '#1d4ed8' : '#d97706'
                            }}>
                              {item.type === 'stock' ? 'üì¶' : 'üîß'}
                            </span>
                            <span style={{ fontWeight: '500' }}>{item.name}</span>
                            {item.unit ? <span style={{ color: '#6b7280', fontSize: 12 }}>‚Ä¢ {item.unit}</span> : null}
                          </div>
                        </td>
                        <td style={{ padding: '12px', textAlign: 'center' }}>{item.quantity}</td>
                        <td style={{ padding: '12px', textAlign: 'right' }}>
                          ‡∏ø{Number(item.pricePerUnit).toLocaleString('th-TH', { minimumFractionDigits: 2 })}
                        </td>
                        <td style={{ padding: '12px', textAlign: 'right', fontWeight: '600' }}>
                          ‡∏ø{Number(item.totalPrice).toLocaleString('th-TH', { minimumFractionDigits: 2 })}
                        </td>
                        <td style={{ padding: '12px', textAlign: 'center' }}>
                          <button
                            type="button"
                            onClick={() => removeItemFromBill(item.id)}
                            style={{
                              padding: '6px',
                              background: '#fee2e2',
                              border: 'none',
                              borderRadius: '6px',
                              color: '#dc2626',
                              cursor: 'pointer',
                              transition: 'all 0.2s ease'
                            }}
                          >
                            <Trash2 size={14} />
                          </button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            ) : (
              <div style={{
                padding: '40px',
                textAlign: 'center',
                color: '#6b7280',
                background: '#f9fafb',
                borderRadius: '12px',
                border: '2px dashed #d1d5db'
              }}>
                <ShoppingCart size={48} style={{ margin: '0 auto 16px', opacity: 0.5 }} />
                <p style={{ margin: '0 0 8px', fontSize: '16px', fontWeight: '500' }}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ö‡∏¥‡∏•</p>
                <p style={{ margin: 0, fontSize: '14px' }}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô</p>
              </div>
            )}
          </div>

          {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <h3 style={{ 
              margin: '0 0 20px', 
              fontSize: '18px', 
              fontWeight: '600',
              color: '#374151',
              display: 'flex',
              alignItems: 'center',
              gap: '8px'
            }}>
              <Calculator size={20} />
              ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
            </h3>

            <div style={{ display: 'grid', gap: '12px', maxWidth: '400px', marginLeft: 'auto' }}>
              <div style={{ display: 'flex', justifyContent: 'space-between', padding: '8px 0' }}>
                <span style={{ color: '#6b7280' }}>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° (‡∏Å‡πà‡∏≠‡∏ô VAT):</span>
                <span style={{ fontWeight: '500' }}>
                  ‡∏ø{subTotal.toLocaleString('th-TH', { minimumFractionDigits: 2 })}
                </span>
              </div>
              
              <div style={{ display: 'flex', justifyContent: 'space-between', padding: '8px 0' }}>
                <span style={{ color: '#6b7280' }}>VAT ({formData.vatRate}%):</span>
                <span style={{ fontWeight: '500', color: '#f59e0b' }}>
                  ‡∏ø{vatAmount.toLocaleString('th-TH', { minimumFractionDigits: 2 })}
                </span>
              </div>
              
              <div style={{ 
                display: 'flex', 
                justifyContent: 'space-between', 
                padding: '12px 0',
                borderTop: '2px solid #e5e7eb',
                fontSize: '18px',
                fontWeight: '700',
                color: '#059669'
              }}>
                <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô:</span>
                <span>‡∏ø{grandTotal.toLocaleString('th-TH', { minimumFractionDigits: 2 })}</span>
              </div>
            </div>
          </div>

          {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
          <div style={{
            background: 'white',
            padding: '24px',
            borderRadius: '16px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)',
            border: '1px solid #e5e7eb'
          }}>
            <h3 style={{ 
              margin: '0 0 16px', 
              fontSize: '18px', 
              fontWeight: '600',
              color: '#374151',
              display: 'flex',
              alignItems: 'center',
              gap: '8px'
            }}>
              <FileText size={20} />
              ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
            </h3>
            <textarea
              name="remark"
              value={formData.remark}
              onChange={handleInputChange}
              rows="4"
              placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..."
              style={{
                width: '100%',
                padding: '12px',
                border: '2px solid #e5e7eb',
                borderRadius: '8px',
                fontSize: '14px',
                resize: 'vertical',
                transition: 'border-color 0.2s ease'
              }}
            />
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å */}
          <div style={{ display: 'flex', gap: '12px', justifyContent: 'flex-end' }}>
            <button
              type="button"
              onClick={() => navigate('/bills')}
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                padding: '14px 24px',
                background: '#f3f4f6',
                border: 'none',
                borderRadius: '12px',
                color: '#374151',
                cursor: 'pointer',
                fontSize: '16px',
                fontWeight: '500',
                transition: 'all 0.2s ease'
              }}
            >
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </button>
            <button
              type="submit"
              disabled={saving || formData.billItems.length === 0}
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                padding: '14px 24px',
                background: saving ? '#9ca3af' : 'linear-gradient(135deg, #059669, #047857)',
                border: 'none',
                borderRadius: '12px',
                color: 'white',
                cursor: saving ? 'not-allowed' : 'pointer',
                fontSize: '16px',
                fontWeight: '600',
                transition: 'all 0.2s ease'
              }}
            >
              {saving ? (
                <>
                  <div style={{
                    width: '16px',
                    height: '16px',
                    border: '2px solid transparent',
                    borderTop: '2px solid white',
                    borderRadius: '50%',
                    animation: 'spin 1s linear infinite'
                  }} />
                  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...
                </>
              ) : (
                <>
                  <Save size={16} />
                  ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡∏¥‡∏•
                </>
              )}
            </button>
          </div>

        </div>
      </form>

      {/* CSS Animations */}
      <style>
        {`
          @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
        `}
      </style>

    </div>
  );
};

export default CreateBill;
